name: Determine Version
description: This action uses StaflVersion to determine the version
author: willson556

outputs:
  full:
    description: "Full version number"
    value: ${{ steps.full-version.outputs.version }}
  major:
    description: "Major version"
    value: ${{ steps.major-version.outputs.version }}
  minor:
    description: "Minor version"
    value: ${{ steps.minor-version.outputs.version }}
  patch:
    description: "Patch version"
    value: ${{ steps.patch-version.outputs.version }}
  build:
    description: "Build version"
    value: ${{ steps.build-version.outputs.version }}

runs:
  using: composite
  steps:
    - name: Install StaflVersion
      if: runner.os == 'Linux'
      shell: bash
      run: pip install git+ssh://git@github.com/StaflSystems/staflversion.git
    - name: Install StaflVersion Windows
      if: runner.os == 'Windows'
      shell: powershell
      run: pip install git+ssh://git@github.com/StaflSystems/staflversion.git
    
    - name: Set Full Verion
      if: runner.os == 'Linux'
      id: full-version
      shell: bash
      run: echo "version=$(staflversion)" >> $GITHUB_OUTPUT
    - name: Set Full Version Windows
      if: runner.os == 'Windows'
      id: full-version
      shell: powershell
      run: $env:GITHUB_OUTPUT += "version=$(staflversion)"
      
    - name: Set Major Version
      if: runner.os == 'Linux'
      id: major-version
      shell: bash
      run: echo "version=$(staflversion --major)" >> $GITHUB_OUTPUT
    - name: Set Major Version Windows
      if: runner.os == 'Windows'
      id: major-version
      shell: powershell
      run: $env:GITHUB_OUTPUT += "version=$(staflversion --major)"
      
    - name: Set Minor Version
      if: runner.os == 'Linux'
      id: minor-version
      shell: bash
      run: echo "version=$(staflversion --minor)" >> $GITHUB_OUTPUT
    - name: Set Minor Version Windows
      if: runner.os == 'Windows'
      id: minor-version
      shell: powershell
      run: $env:GITHUB_OUTPUT += "version=$(staflversion --minor)"
      
    - name: Set Patch Version
      if: runner.os == 'Linux'
      id: patch-version
      shell: bash
      run: echo "version=$(staflversion --patch)" >> $GITHUB_OUTPUT
    - name Set Patch Version Windows
      if: runner.os == 'Windows'
      id: patch-version
      shell: powershell
      run: $env:GITHUB_OUTPUT += "version=$(staflversion --patch)"
      
    - name: Set Build Version
      if: runner.os == 'Linux'
      id: build-version
      shell: bash
      run: echo "version=$(staflversion --build)" >> $GITHUB_OUTPUT
    - name: Set Build Version Windows
      if: runner.os == 'Windows'
      id: build-version
      shell: powershell
      run: $env:GITHUB_OUTPUT += "version=$(staflversion --build)"
