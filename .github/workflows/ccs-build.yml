name: Basic Build

on:
  workflow_call:
    inputs:
      project_name:
        description: This is the name of the project being built
        required: true
        type: string
      build_config:
        description: These are the build configs you want to build in CCStudio. Make this a comma separated list e.g. "Debug,Heartbeat_Disabled"
        required: true
        type: string
      clean_workspace:
        description: Set to true if the workspace should be cleaned when this completes. Set to false if you have more to do.
        required: false
        type: boolean
        default: true 
      build_version_path:
        default: BuildVersion.h
        type: string
      format-exclude:
        default: ''
        type: string
      increment-build:
        required: false
        type: boolean
        default: true
    outputs:
      tag_version:
        description: version number of tag
        value: ${{ jobs.build.outputs.tag_version }}

    secrets:
      STAFL_CI_PRIVATE_KEY:
        required: true
        description: access token for dependency checking

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: DoozyX/clang-format-lint-action@v0.13
      with:
        source: '.'
        exclude: ${{ inputs.format-exclude }}
        extensions: 'h,cpp'
        clangFormatVersion: 12

  check_dependencies_action:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    name: Check Dependencies Action
    steps:
      uses: StaflSystems/CustomGithubActions/CheckDependencies@feature/dependency-check
      with:
        STAFL_CI_PRIVATE_KEY: ${{ secrets.STAFL_CI_PRIVATE_KEY }}

  check_dependencies:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    name: Check Dependencies
    steps:
      - name: Get Auth Token
        id: get-auth-token
        run: |
          echo "${{ secrets.STAFL_CI_PRIVATE_KEY }}" > key.pem
          TOKEN=`npx https://github.com/StaflSystems/github-app-installation-access-token get -a 159011 -i 21323630 -k "@key.pem"`
          echo "::set-output name=token::$TOKEN"
      - uses: gregsdennis/dependencies-action@main
        env:
          GITHUB_TOKEN: ${{ steps.get-auth-token.outputs.token }}
    
    
  build:
    runs-on: self-hosted
    outputs:
      tag_version: ${{steps.gitversion.outputs.major}}.${{steps.gitversion.outputs.minor}}.${{steps.gitversion.outputs.patch}}+${{steps.gitversion.outputs.build}}
        
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch tags
      run: git fetch --tags
      
    - name: Checkout Submodules
      shell: bash
      run: git submodule update --init --recursive
      
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: '5.x'

    - name: Determine Version
      if: ${{ inputs.increment-build }}
      id: gitversion
      uses: StaflSystems/CustomGithubActions/ExecuteGitVersion@main
      
    - name: Update BuildVersion.h
      uses: StaflSystems/CustomGithubActions/WriteBuildVersion@main
      with:
        filepath: ${{inputs.build_version_path}}
        major_version: ${{steps.gitversion.outputs.major}}
        minor_version: ${{steps.gitversion.outputs.minor}}
        patch_version: ${{steps.gitversion.outputs.patch}}
        build_version: ${{steps.gitversion.outputs.build}}
        
    - name: Build Project
      uses: StaflSystems/CustomGithubActions/CCStudioBuild@main
      with:
        project_name: ${{ inputs.project_name }}
        build_config: ${{ inputs.build_config }}

    - name: Collect Release Artifacts
      uses: StaflSystems/CustomGithubActions/CollectReleaseArtifacts@main
      with:
        version: ${{steps.gitversion.outputs.major}}.${{steps.gitversion.outputs.minor}}.${{steps.gitversion.outputs.patch}}+${{steps.gitversion.outputs.build}}
        artifacts: "*/*.bin,*/*.out,**/*.dbc,release-artifacts/*"
        destination: "release-artifacts-renamed"

    - name: Create a GitHub release
      if: github.ref == 'refs/heads/main'
      uses: ncipollo/release-action@v1
      with:
        artifacts: "release-artifacts-renamed/*"
        tag: ${{steps.gitversion.outputs.major}}.${{steps.gitversion.outputs.minor}}.${{steps.gitversion.outputs.patch}}+${{steps.gitversion.outputs.build}}
        
    - name: Clean workspace
      uses: mickem/clean-after-action@v1
      if: ${{ failure() || inputs.clean_workspace }}
