name: CMake Embedded Build

on:
  workflow_call:
    inputs:
      toolchain:
        description: Which toolchain to use
        required: true
        type: string
      build_type:
        description: (Release, Debug, RelWithDebInfo, etc.)
        required: true
        type: string
      build_version_path:
        default: src/main/BuildVersion.h
        type: string
      format-exclude:
        default: ''
        type: string
        
    secrets:
      ACTIONS_SSH_PRIVATE_KEY:
        required: true
        description: private key
      STAFL_CI_PRIVATE_KEY:
        required: true
        description: access token for dependency checking

jobs:
  format:
   runs-on: ubuntu-latest
   steps:
    - uses: actions/checkout@v3
    - uses: DoozyX/clang-format-lint-action@v0.17
      with:
        source: '.'
        exclude: ${{ inputs.format-exclude }}
        extensions: 'h,cpp'
        clangFormatVersion: 14
        
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/staflsystems/stafl-devcontainer-ci:0.1.2-0
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    steps:   
    - uses: actions/checkout@v4.1.2
      with:
        fetch-depth: 0

    - uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.ACTIONS_SSH_PRIVATE_KEY }}

    - name: Add Safe directory
      run: git config --system --add safe.directory "*"

    - name: Determine Version
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/dev')
      id: staflversion
      uses: StaflSystems/CustomGithubActions/DetermineVersion@v4.0.1
      
    - name: Update BuildVersion.h
      uses: StaflSystems/CustomGithubActions/WriteBuildVersion@v4.0.1
      if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/dev')
      with:
        filepath: ${{inputs.build_version_path}}
        major_version: ${{steps.staflversion.outputs.major}}
        minor_version: ${{steps.staflversion.outputs.minor}}
        patch_version: ${{steps.staflversion.outputs.patch}}
        build_version: ${{steps.staflversion.outputs.build}}
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{inputs.build_type}} -G Ninja -DCMAKE_TOOLCHAIN_FILE=${{ inputs.toolchain }}

    - uses: ammaraskar/gcc-problem-matcher@master
    - name: Build
      # Build your program with the given configuration
      run: cmake --build build --config ${{inputs.build_type}}

    - name: Collect Release Artifacts (dev)
      if: startsWith(github.ref, 'refs/heads/dev')
      uses: StaflSystems/CustomGithubActions/CollectReleaseArtifacts@v4.0.1
      with:
        version: ${{steps.staflversion.outputs.full}}-${{steps.branch-name.outputs.current_branch}}-${{matrix.build-type}}
        artifacts: "build/bin/**/*.bin,build/bin/**/*.out,build/bin/**/*.elf,docs/**/*,release-artifacts/**/*"
        destination: "release-artifacts-renamed"
    - name: Collect Release Artifacts (main)
      if: github.ref == 'refs/heads/main'
      uses: StaflSystems/CustomGithubActions/CollectReleaseArtifacts@v4.0.1
      with:
        version: ${{steps.staflversion.outputs.full}}
        artifacts: "build/bin/**/*.bin,build/bin/**/*.out,build/bin/**/*.elf,docs/**/*,release-artifacts/**/*"
        destination: "release-artifacts-renamed"

    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v8.0.1
      
    - name: Create a GitHub release
      if: startsWith(github.ref, 'refs/heads/dev')
      uses: ncipollo/release-action@v1.14.0
      with:
        artifacts: "release-artifacts-renamed/*"
        tag: ${{steps.staflversion.outputs.full}}-${{steps.branch-name.outputs.current_branch}}
        commit: ${{ github.sha }}
    - name: Create a GitHub release
      if: github.ref == 'refs/heads/main'
      uses: ncipollo/release-action@v1.14.0
      with:
        artifacts: "release-artifacts-renamed/*"
        tag: ${{steps.staflversion.outputs.full}}

    - name: Delete dev Branch
      if: startsWith(github.ref, 'refs/heads/dev')
      run: |
        git push origin --delete ${{ steps.branch-name.outputs.current_branch }}
